<?php

// **Функция для основных арифметических операций**
function basicArithmetic($num1, $num2, $operation) {
    switch ($operation) {
        case 'add':
            return $num1 + $num2; // Сложение
        case 'subtract':
            return $num1 - $num2; // Вычитание
        case 'multiply':
            return $num1 * $num2; // Умножение
        case 'divide':
            if ($num2 != 0) {
                return $num1 / $num2; // Деление, если делитель не равен нулю
            } else {
                return "Деление на ноль невозможно";
            }
        default:
            return "Неверная операция"; // Сообщение об ошибке для некорректной операции
    }
}

// **Функция, принимающая три параметра**
function mathOperation($arg1, $arg2, $operation) {
    // Используем функцию из первой задачи для выполнения арифметической операции
    return basicArithmetic($arg1, $arg2, $operation);
}

// **Объявление массива областей и городов**
$regions = [
    "Московская область" => ["Москва", "Зеленоград", "Клин"],
    "Ленинградская область" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"],
    // Можете добавить другие области и города
];

// **Цикл для вывода областей и городов**
foreach ($regions as $region => $cities) {
    echo $region . ": " . implode(", ", $cities) . PHP_EOL; // Конкатенация строки с городами с разделителем ", "
}

// **Функция для транслитерации текста**
function transliterate($text) {
    // Массив с русскими буквами и их латинскими соответствиями
    $letters = [
        'а' => 'a', 'б' => 'b', 'в' => 'v', 'г' => 'g', 
        // ... добавьте остальные пары букв
        'ю' => 'yu', 'я' => 'ya'
    ];

    // Замена русских букв в строке на латинские
    return strtr($text, $letters);
}

// **Пример использования функции транслитерации**
echo transliterate('привет'); // Должно вывести "privet"

// **Функция возведения числа в степень с помощью рекурсии**
function power($val, $pow) {
    if ($pow == 0) return 1; // Любое число в степени 0 равно 1
    if ($pow < 0) return 1 / power($val, -$pow); // Обработка отрицательной степени
    return $val * power($val, $pow - 1); // Рекурсивное умножение для положительной степени
}

// **Вычисление текущего времени с правильными склонениями**
function formatCurrentTime() {
    $hours = date('H');
    $minutes = date('i');

    // Проверка и выбор правильной формы слова "час"
    $hourWord = ($hours % 10 == 1 && $hours != 11) ? 'час' : 'часов';
    // Проверка и выбор правильной формы слова "минута"
    $minuteWord = ($minutes % 10 == 1 && $minutes != 11) ? 'минута' : 'минут';

    return "$hours $hourWord $minutes $minuteWord"; // Форматированная строка времени
}

// **Пример использования функции форматирования времени**
echo formatCurrentTime(); // Например, "22 часа 15 минут"

?>
